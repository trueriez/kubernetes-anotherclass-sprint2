pipeline {
    agent any

    tools {
        gradle 'gradle-7.6.1'
        jdk 'jdk-17'
    }

    environment {
        GHCR_USERNAME = 'k8s-1pro'
        GHCR_REPO = 'ghcr.io/k8s-1pro/api-tester'
        GITHUB_URL = 'https://github.com/k8s-1pro/kubernetes-anotherclass-sprint2.git'

        // 실습 넘버링
        CLASS_NUM = '2212'
    }
    
    stages {
        stage('소스파일 체크아웃') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS')]) {
                        checkout scmGit(
                            branches: [[name: '*/main']],  
                            userRemoteConfigs: [[url: "https://${GIT_USER}:${GIT_PASS}@github.com/k8s-1pro/kubernetes-anotherclass-api-tester.git"]]
                        )
                    }
                }
            }
        }

        stage('소스 빌드') {
            steps {
                sh "chmod +x ./gradlew"
                sh "./gradlew clean build"
            }
        }

        stage('릴리즈파일 체크아웃') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS')]) {
                        checkout scmGit(
                            branches: [[name: '*/main']],
                            extensions: [[$class: 'SparseCheckoutPaths',
                            sparseCheckoutPaths: [[path: "/${CLASS_NUM}"]]]],
                            userRemoteConfigs: [[url: "https://${GIT_USER}:${GIT_PASS}@github.com/k8s-1pro/kubernetes-anotherclass-sprint2.git"]]
                        )
                    }
                }
            }
        }

        stage('컨테이너 빌드 & GHCR 업로드') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github-container-credentials', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PAT')]) {
                        sh '''
                            echo "📌 현재 작업 디렉토리 (pwd):"
                            pwd  # 현재 위치 출력

                            echo "$GIT_PAT" | docker login ghcr.io -u "$GIT_USER" --password-stdin

                            mkdir -p ./${CLASS_NUM}/build/docker
                            cp ./build/libs/app-0.0.1-SNAPSHOT.jar ./${CLASS_NUM}/build/docker/app-0.0.1-SNAPSHOT.jar
                            
                            docker build -t ${GHCR_REPO}:v1.0.0 ./${CLASS_NUM}/build/docker
                            docker push ${GHCR_REPO}:v1.0.0
                        '''
                    }
                }
            }
        }

        stage('쿠버네티스 배포') {
            steps {
                sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/namespace.yaml"
                sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/configmap.yaml"
                sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/secret.yaml"
                sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/service.yaml"
                sh "kubectl apply -f ./${CLASS_NUM}/deploy/k8s/deployment.yaml"
            }
        }

        stage('배포 확인') {
            steps {
                sh "sleep 10"
                sh "kubectl get pods -n ${CLASS_NUM}"
                sh "kubectl get svc -n ${CLASS_NUM}"
                sh "kubectl get deployments -n ${CLASS_NUM}"
            }
        }
    }
}
