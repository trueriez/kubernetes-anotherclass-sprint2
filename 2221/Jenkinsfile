pipeline {
    agent any

    tools {
        gradle 'gradle-8.10'
        jdk 'jdk-17'
    }

    environment {
        // 본인의 username으로 하실 분은 수정해주세요.
        DOCKERHUB_USERNAME = 'trueriez'
        GITHUB_URL = 'https://github.com/trueriez/kubernetes-anotherclass-sprint2.git'
        GHCR_REPO = 'ghcr.io/trueriez/api-tester'
        // 실습 넘버링
        CLASS_NUM = '2221'
    }

    stages {
        stage('소스파일 체크아웃') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS')]) {
                        checkout scmGit(
                            branches: [[name: '*/main']],
                            userRemoteConfigs: [[url: "https://${GIT_USER}:${GIT_PASS}@github.com/trueriez/kubernetes-anotherclass-api-tester.git"]]
                        )
                    }
                }
            }
        }

        stage('소스 빌드') {
            steps {
                // 755권한 필요 (윈도우에서 Git으로 소스 업로드시 권한은 644)
                echo "chmod +x ./gradlew"
                echo "gradle clean build"
            }
        }

        stage('릴리즈파일 체크아웃') {
            steps {
               script {
                    withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS')]) {
                        checkout scmGit(
                            branches: [[name: '*/main']],
                            extensions: [[$class: 'SparseCheckoutPaths',
                            sparseCheckoutPaths: [[path: "/${CLASS_NUM}"]]]],
                            userRemoteConfigs: [[url: "https://${GIT_USER}:${GIT_PASS}@github.com/trueriez/kubernetes-anotherclass-sprint2.git"]]
                        )
                    }
                }
            }
        }

        stage('컨테이너 빌드') {
            steps {
                // jar 파일 복사
                echo "cp ./build/libs/app-0.0.1-SNAPSHOT.jar ./${CLASS_NUM}/build/docker/app-0.0.1-SNAPSHOT.jar"

		script {
                    withCredentials([usernamePassword(credentialsId: 'github-container-credentials', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PAT')]) {
              	        // 도커 빌드
			echo "docker build -t ${GHCR_REPO}/api-tester:v1.0.0 ./${CLASS_NUM}/build/docker"
			echo "docker push ${GHCR_REPO}:v1.0.0"
                    }
                }
            }
        }


        stage('헬름 템플릿 확인') {
            steps {
                // K8S 배포
                sh "helm template api-tester-${CLASS_NUM} ./${CLASS_NUM}/deploy/helm/4.addition/api-tester -n anotherclass-222 --create-namespace"
            }
        }

        stage('헬름 배포') {
            steps {
                input message: '배포 시작', ok: "Yes"
                sh "helm upgrade api-tester-${CLASS_NUM} ./${CLASS_NUM}/deploy/helm/4.addition/api-tester -n anotherclass-222 --create-namespace --install"
            }
        }
    }
}
