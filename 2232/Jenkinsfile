pipeline {
    agent any

    tools {
        gradle 'gradle-8.10'
        jdk 'jdk-17'
    }

    parameters {
        choice(choices: ['dev', 'qa', 'prod'], name: 'PROFILE', description: '배포 환경 선택')
    }

    environment {
        DOCKERHUB_USERNAME = 'trueriez'
        GITHUB_URL = 'https://github.com/trueriez/kubernetes-anotherclass-sprint2.git'
        GHCR_REPO = 'ghcr.io/trueriez'

        APP_VERSION = '1.1.1'
        BUILD_DATE = sh(script: "date +%y%m%d.%H%M%S", returnStdout: true).trim()
        TAG = "${APP_VERSION}-${BUILD_DATE}"

        CLASS_NUM = '2232'
    }

    stages {
        stage('소스파일 체크아웃') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS')]) {
                        checkout scmGit(
                            branches: [[name: '*/main']],  
                            userRemoteConfigs: [[url: "https://${GIT_USER}:${GIT_PASS}@github.com/trueriez/kubernetes-anotherclass-api-tester.git"]]
                        )
                    }
                }
            }
        }

        stage('소스 빌드') {
            steps {
                sh "chmod +x ./gradlew"
                sh "./gradlew clean build"
            }
        }

        stage('컨테이너 빌드') {
            steps {
                script {
                    sh "mkdir -p ./${CLASS_NUM}/build/docker"
                    sh "cp ./build/libs/app-0.0.1-SNAPSHOT.jar ./${CLASS_NUM}/build/docker/app-0.0.1-SNAPSHOT.jar"
                    withCredentials([usernamePassword(credentialsId: 'github-container-credentials', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PAT')]) {
                        sh "docker build -t ${GHCR_REPO}/api-tester:${TAG} ./${CLASS_NUM}/build/docker"
                    }
                }
            }
        }

        stage('컨테이너 업로드') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github-container-credentials', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PAT')]) {
                        sh """
                        echo "${GIT_PAT}" | docker login ghcr.io -u "${GIT_USER}" --password-stdin
                        docker push ${GHCR_REPO}/api-tester:${TAG}
                        """
                    }
                }
            }
        }
    }
}
